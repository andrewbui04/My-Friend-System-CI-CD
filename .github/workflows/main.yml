name: CI/CD Pipeline for My Friend System 

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: 2611
          MYSQL_DATABASE: my_friend_system
          MYSQL_USER: myuser
          MYSQL_PASSWORD: mypassword
        ports:
          - 3307:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, pdo_mysql, mysqli

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Install PHP Extensions
        run: sudo apt-get install php-xml

      - name: Run PHPUnit Tests
        run: vendor/bin/phpunit tests

  deploy:
    name: Deploy to Azure Web Apps for Containers
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Azure
        run: |
          az login --use-device-code

      - name: Log in to Azure Container Registry
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login myfriendsystemregistry.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build & Push PHP App Image to ACR
        run: |
          docker build -t myfriendsystemregistry.azurecr.io/my_friend_system-php-app:latest .
          docker push myfriendsystemregistry.azurecr.io/my_friend_system-php-app:latest

      - name: Build & Push MySQL Image to ACR
        run: |
          docker build -t myfriendsystemregistry.azurecr.io/mysql-db:latest .
          docker push myfriendsystemregistry.azurecr.io/mysql-db:latest

      - name: Deploy to Azure Web App with Multi-Container Setup
        run: |
          az webapp create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --plan my-app-service-plan \
            --name my-friend-system \
            --deployment-container-image-name myfriendsystemregistry.azurecr.io/my_friend_system-php-app:latest

          az webapp config container set \
            --name my-friend-system \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --multicontainer-config-type compose \
            --multicontainer-config-file docker-compose.yml
